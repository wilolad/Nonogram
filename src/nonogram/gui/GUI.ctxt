#BlueJ class context
comment0.target=GUI
comment0.text=\r\n\ A\ Graphical\ User\ interface\ to\ a\ Nonogram\ puzzle.\r\n
comment1.params=
comment1.target=GUI()
comment1.text=\r\n\ Default\ constructor\r\n
comment2.params=
comment2.target=void\ createUI()
comment2.text=\r\n\ Create\ and\ add\ all\ UI\ components\ to\ this\ JFrame\ and\r\n\ displays\ it\ to\ the\ end\ user.\r\n
comment3.params=str
comment3.target=java.lang.String\ transformStringToVertical(java.lang.String)
comment3.text=\r\n\ Transform\ the\ given\ string\ into\ a\ vertical\ text\ by\ inserting\ HTML\ line\ breaks\ between\ each\ letter.\r\n\r\n\ @param\ str\ the\ string\ to\ be\ converted\r\n\ @return\ the\ converted\ string\ in\ vertical\ text\ format\r\n
comment4.params=str
comment4.target=java.lang.String\ formatRowHint(java.lang.String)
comment4.text=\r\n\ Format\ a\ string\ by\ adding\ double\ spaces\ before\ each\ letter\ and\ a\ space\ afterwards\r\n\r\n\ @param\ str\ the\ string\ to\ be\ formatted.\r\n\ @return\ the\ formatted\ string.\r\n
comment5.params=o\ arg
comment5.target=void\ update(java.util.Observable,\ java.lang.Object)
comment5.text=\r\n\ This\ method\ updates\ the\ visual\ representation\ of\ a\ cell\ in\ the\ game\ when\ it\ has\ changed\ state.\r\n\ If\ arg\ (the\ cell)\ is\ null,\ the\ game\ is\ reset.\ Otherwise,\ the\ row,\ column,\ and\ state\ of\ the\ cell\ are\r\n\ retrieved\ and\ used\ to\ update\ the\ background\ and\ foreground\ colors\ of\ the\ corresponding\ button\r\n\ on\ the\ game\ board.\r\n\r\n\ @param\ o\ \ \ the\ Observable\ object\ that\ has\ changed\ state\r\n\ @param\ arg\ the\ Object\ representing\ the\ cell\ that\ has\ changed\ state\r\n
comment6.params=row\ col
comment6.target=void\ checkSolved(int,\ int)
comment6.text=\r\n\ This\ method\ checks\ if\ a\ row\ or\ column\ or\ the\ entire\ puzzle\ is\ solved.\r\n\ When\ a\ row\ or\ col\ is\ solved,\ the\ row\ or\ col\ hint\ changes\ to\ green\r\n\r\n\ @param\ row\ the\ row\ we\ want\ to\ check\ for\ solved\r\n\ @param\ col\ the\ column\ we\ want\ to\ check\ for\ solved\r\n
comment7.params=
comment7.target=void\ resetGame()
comment7.text=\r\n\ Reset\ the\ game\ by\ setting\ the\ background\ and\ foreground\ of\ all\ cells\ to\ the\ GRAY\ color\ defined\ by\ UNKNOWN.\r\n
comment8.params=state
comment8.target=java.awt.Color\ getButtonColor(int)
comment8.text=\r\n\ Return\ a\ color\ based\ on\ the\ state\ of\ a\ cell.\r\n\r\n\ @param\ state\ an\ integer\ representing\ the\ state\ of\ the\ cell.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Possible\ values\ are\ 0\ for\ empty,\ 1\ for\ full,\ and\ any\ other\ value\ for\ unknown.\r\n\ @return\ a\ Color\ object\ representing\ the\ corresponding\ state\ of\ the\ button.\r\n\ EMPTY\ for\ color\ White,\ FULL\ for\ Black,\ and\ UNKNOWN\ for\ Gray.\r\n
numComments=9
